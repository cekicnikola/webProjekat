// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backEnd.Models;

namespace backEnd.Migrations
{
    [DbContext(typeof(PivnicaContext))]
    partial class PivnicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("NarudzbinaPromocija", b =>
                {
                    b.Property<int>("NarudzbineID")
                        .HasColumnType("int");

                    b.Property<int>("PromocijeID")
                        .HasColumnType("int");

                    b.HasKey("NarudzbineID", "PromocijeID");

                    b.HasIndex("PromocijeID");

                    b.ToTable("NarudzbinaPromocija");
                });

            modelBuilder.Entity("backEnd.Models.Meni", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PivnicaID")
                        .HasColumnType("int");

                    b.Property<string>("Promocije")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PivnicaID")
                        .IsUnique();

                    b.ToTable("Meni");
                });

            modelBuilder.Entity("backEnd.Models.Narudzbina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Doneta")
                        .HasColumnType("bit");

                    b.Property<int>("KolicinaHrane")
                        .HasColumnType("int");

                    b.Property<int>("KolicinaPiva")
                        .HasColumnType("int");

                    b.Property<int?>("PivoHranaID")
                        .HasColumnType("int");

                    b.Property<int?>("StoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PivoHranaID");

                    b.HasIndex("StoID");

                    b.ToTable("Narudzbine");
                });

            modelBuilder.Entity("backEnd.Models.Pivnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojStolova")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Pivnice");
                });

            modelBuilder.Entity("backEnd.Models.PivoHrana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<int?>("MeniID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PiceIliHrana")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("MeniID");

                    b.ToTable("PivaHrana");
                });

            modelBuilder.Entity("backEnd.Models.Promocija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MinKolicinaHrane")
                        .HasColumnType("int");

                    b.Property<int>("MinKolicinaPica")
                        .HasColumnType("int");

                    b.Property<int>("Popust")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promocije");
                });

            modelBuilder.Entity("backEnd.Models.Sto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojStola")
                        .HasColumnType("int");

                    b.Property<int?>("PivnicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PivnicaID");

                    b.ToTable("Stolovi");
                });

            modelBuilder.Entity("NarudzbinaPromocija", b =>
                {
                    b.HasOne("backEnd.Models.Narudzbina", null)
                        .WithMany()
                        .HasForeignKey("NarudzbineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backEnd.Models.Promocija", null)
                        .WithMany()
                        .HasForeignKey("PromocijeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backEnd.Models.Meni", b =>
                {
                    b.HasOne("backEnd.Models.Pivnica", "Pivnica")
                        .WithOne("Meni")
                        .HasForeignKey("backEnd.Models.Meni", "PivnicaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pivnica");
                });

            modelBuilder.Entity("backEnd.Models.Narudzbina", b =>
                {
                    b.HasOne("backEnd.Models.PivoHrana", "PivoHrana")
                        .WithMany("Narudzbine")
                        .HasForeignKey("PivoHranaID");

                    b.HasOne("backEnd.Models.Sto", "Sto")
                        .WithMany("Narudzbine")
                        .HasForeignKey("StoID");

                    b.Navigation("PivoHrana");

                    b.Navigation("Sto");
                });

            modelBuilder.Entity("backEnd.Models.PivoHrana", b =>
                {
                    b.HasOne("backEnd.Models.Meni", "Meni")
                        .WithMany("Stavke")
                        .HasForeignKey("MeniID");

                    b.Navigation("Meni");
                });

            modelBuilder.Entity("backEnd.Models.Sto", b =>
                {
                    b.HasOne("backEnd.Models.Pivnica", "Pivnica")
                        .WithMany("Stolovi")
                        .HasForeignKey("PivnicaID");

                    b.Navigation("Pivnica");
                });

            modelBuilder.Entity("backEnd.Models.Meni", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("backEnd.Models.Pivnica", b =>
                {
                    b.Navigation("Meni");

                    b.Navigation("Stolovi");
                });

            modelBuilder.Entity("backEnd.Models.PivoHrana", b =>
                {
                    b.Navigation("Narudzbine");
                });

            modelBuilder.Entity("backEnd.Models.Sto", b =>
                {
                    b.Navigation("Narudzbine");
                });
#pragma warning restore 612, 618
        }
    }
}
